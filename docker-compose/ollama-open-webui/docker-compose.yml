---
services:
  ollama:
    image: ollama/ollama:rocm
    container_name: ollama
    pull_policy: always
    volumes:
      - ${VOLUME_BASE_PATH}/ollama:/root/.ollama
    tty: true
    restart: unless-stopped
    ports:
      - "11434:11434"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    pull_policy: always
    networks:
      - proxy
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    depends_on:
      - ollama
    ports:
      - 30025:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${VOLUME_BASE_PATH}/open-webui:/app/backend/data
    restart: unless-stopped
    labels:
      - traefik.enable=true
      # Internet Domain Configuration
      - traefik.http.routers.openwebui-external.rule=Host(`ai.nezdemkovski.cloud`) && PathPrefix(`/`)
      - traefik.http.routers.openwebui-external.entrypoints=websecure
      - traefik.http.routers.openwebui-external.tls=true
      - traefik.http.routers.openwebui-external.tls.certresolver=cloudflare
      # Local Network Domain Configuration
      - traefik.http.routers.openwebui-internal.rule=Host(`ai.home.lab`) && PathPrefix(`/`)
      - traefik.http.routers.openwebui-internal.entrypoints=websecure
      - traefik.http.routers.openwebui-internal.tls=true
      # Common Service Configuration
      - traefik.http.services.openwebui.loadbalancer.server.port=8080
networks:
  proxy:
    external: true
